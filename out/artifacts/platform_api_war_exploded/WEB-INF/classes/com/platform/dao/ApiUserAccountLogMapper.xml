<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.ApiUserAccountLogMapper">

    <resultMap type="com.platform.entity.UserAccountLogVo" id="userAccountLogMap">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="logType" column="log_type"/>
        <result property="addtime" column="addTime"/>
        <result property="desc" column="desc"/>
        <result property="orderId" column="order_id"/>
        <result property="moneyType" column="money_type"/>
        <result property="moneyValue" column="money_value"/>
    </resultMap>

	<select id="queryObject" resultType="com.platform.entity.UserAccountLogVo">
		select
			`id`,
			`user_id`,
			`log_type`,
			`addTime`,
			`desc`,
			`order_id`,
			`money_type`,
			`money_value`
		from nideshop_user_account_log
		where id = #{id}
	</select>

	<select id="queryList" resultType="com.platform.entity.UserAccountLogVo">
		select
    		`id`,
    		`user_id`,
    		`log_type`,
    		`addTime`,
    		`desc`,
    		`order_id`,
    		`money_type`,
    		`money_value`
		from nideshop_user_account_log
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from nideshop_user_account_log
		WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.UserAccountLogVo" useGeneratedKeys="true" keyProperty="id">
		insert into nideshop_user_account_log(
			`user_id`,
			`log_type`,
			`addTime`,
			`desc`,
			`order_id`,
			`money_type`,
			`money_value`)
		values(
			#{userId},
			#{logType},
			#{addtime},
			#{desc},
			#{orderId},
			#{moneyType},
			#{moneyValue})
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.UserAccountLogVo">
		update nideshop_user_account_log 
		<set>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="logType != null">`log_type` = #{logType}, </if>
			<if test="addtime != null">`addTime` = #{addtime}, </if>
			<if test="desc != null">`desc` = #{desc}, </if>
			<if test="orderId != null">`order_id` = #{orderId}, </if>
			<if test="moneyType != null">`money_type` = #{moneyType},</if>
			<if test="moneyValue != null">`money_value` = #{moneyValue}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from nideshop_user_account_log where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from nideshop_user_account_log where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>